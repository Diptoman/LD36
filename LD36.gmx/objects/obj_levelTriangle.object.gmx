<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hover</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_buttonParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>levelNum = 1; //Default
state = 0; // 0 -&gt; locked, 1 -&gt; unlocked/current, 2 -&gt; solved

alarm[0] = 1; //Decide on hovering
image_speed = 0;

imageIndex = 0;
visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check whether locked or unlocked
visible = true;
if (global.level &lt; levelNum)
{
    imageIndex = 0;
}
else if (global.level == levelNum)
{
    imageIndex = 1;
}
else if (global.level &gt; levelNum)
{
    imageIndex = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (imageIndex!=0)
{
    TweenFire(id,image_index__,EaseLinear,0,0,0,9,9,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (imageIndex!=0)
{
    TweenFire(id,image_index__,EaseLinear,0,0,0,9,0,9);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to level
if (imageIndex!=0)
{
    global.currentLevel = levelNum;
    switch(levelNum)
    {
        case 1:
            room_goto(rm_lvl1);
            break;
        case 2:
            room_goto(rm_lvl2);
            break;
        case 3:
            room_goto(rm_lvl3);
            break;
        case 4:
            room_goto(rm_lvl4);
            break;
        case 5:
            room_goto(rm_lvl5);
            break;
        case 6:
            room_goto(rm_lvl6);
            break;
        case 7:
            room_goto(rm_lvl7);
            break;
        case 8:
            room_goto(rm_lvl8);
            break;
        case 9:
            room_goto(rm_lvl9);
            break;
        case 10:
            room_goto(rm_lvl10);
            break;
        case 11:
            room_goto(rm_lvl11);
            break;
        case 12:
            room_goto(rm_lvl12);
            break;
        case 13:
            room_goto(rm_lvl13);
            break;
        case 14:
            room_goto(rm_lvl14);
            break;
        case 15:
            room_goto(rm_lvl15);
            break;
        case 16:
            room_goto(rm_lvl16);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_pyramid,0,x,y,image_xscale,image_yscale,image_angle,c_white,image_alpha);


if (imageIndex == 1)
{
    //draw_sprite_ext(spr_pyramidGlow,0,x,y,image_xscale,image_yscale,image_angle,c_white,1);
    draw_sprite_ext(spr_pyramidGlow,1,x,y,image_xscale,image_yscale,image_angle,c_white,1);
}
else if (imageIndex == 2)
    draw_sprite_ext(spr_pyramidGlow,0,x,y,image_xscale,image_yscale,image_angle,c_white,1);

draw_self();

draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_black);
//draw_text(x,y,string(alpha));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
